# This is the configuration executed in a new workflow once the main thread starts processing
# a new job on CircleCI.
#
# To modify commands to execute on CI review this file, and the script that generates it.
version: 2.1

parameters:
  isNightly:
    type: boolean
    default: false

commands:
  prepare_environment_command:
    description: "Prepare environment (RAM, browsers, hosts, etc.)"
    steps:
      # CircleCI does not use the latest Chrome. Hence, we must install it manually.
      - run:
          name: Install the latest Chrome
          command: yarn ckeditor5-dev-ci-install-latest-chrome
      - run:
          name: Install GitHub CLI
          command: |
            #!/bin/bash

            # Install the package.
            sudo apt update
            sudo apt install gh
            
            # The "GITHUB_TOKEN" is defined in "Environment Variables".

            # Authenticate & configure.
            gh auth setup-git
            gh auth status
            gh config set prompt disabled
            gh --version

  install_ssh_keys_command:
    description: "Install SSH keys"
    steps:
      - add_ssh_keys:
          fingerprints:
            - "2a:97:94:d9:ae:a0:8d:bd:c2:2a:2d:cf:8d:d1:94:bd"

  bootstrap_repositories_command:
    description: "Bootstrap the CKEditor 5 project"
    steps:
      - install_ssh_keys_command
      - run:
          name: Install dependencies
          command: yarn install

  checkout_command:
    description: "Clone the CKEditor 5 repository with limited depth and branches"
    steps:
      - run:
          name: Checkout code (single branch)
          command: git clone --single-branch --depth 10 --branch "$CIRCLE_BRANCH" "$CIRCLE_REPOSITORY_URL" .

jobs:
  cke5_manual:
    machine: true
    steps:
      - checkout_command
      - bootstrap_repositories_command
      - prepare_environment_command
      - run:
          name: Prepare DLL builds in CKEditor 5
          command: yarn run dll:build
      - run:
          name: Verify CKEditor 5 manual tests
          command: bash scripts/check-manual-tests.sh -r ckeditor5 -f ckeditor5

  cke5_validators:
    machine: true
    steps:
      - checkout_command
      - bootstrap_repositories_command
      - prepare_environment_command
      - run:
          when: always
          name: Validate versions of CKEditor 5 dependencies
          command: yarn run check-dependencies:versions-match
      - run:
          when: always
          name: Validate icons specified in "ckeditor5-metadata.json" files
          command: node -e "require( './scripts/ci/validate-metadata-icons.js' )();"
      - run:
          when: always
          name: Validate manual test directories
          command: node ./scripts/ci/check-manual-tests-directory-structure.js
      - run:
          when: always
          name: Check dependencies
          command: yarn run check-dependencies
      - run:
          when: always
          name: Execute ESLint
          command: yarn run lint
      - run:
          when: always
          name: Execute Stylelint
          command: yarn run stylelint

  cke5_coverage:
    machine: true
    steps:
      - checkout_command
      - bootstrap_repositories_command
      - prepare_environment_command
      - run:
          name: ⚠️ Upload the code coverage - Check if the build should continue
          command: '[ $( node -p "require( ''./scripts/ci/is-nightly-build.js'' )().toString()" ) == "true" ] && circleci-agent step halt || echo "" > /dev/null'
      - attach_workspace:
          at: .out
      - run:
          name: Merge the code coverage of the framework and features
          command: cat .out/* > .out/combined_lcov.info
      - run:
          name: Preparing the environment variables
          command: |
            export COVERALLS_SERVICE_NAME="CKEditor 5 code coverage"
            export COVERALLS_SERVICE_JOB_ID=$( CIRCLE_WORKFLOW_ID )
            export COVERALLS_GIT_BRANCH=$( CIRCLE_BRANCH )
#      - run:
#          name: Upload the coverage to Coveralls
#          command: npx coveralls -v < .out/combined_lcov.info

  release_prepare:
    machine: true
    steps:
      - checkout_command
      - bootstrap_repositories_command
      - prepare_environment_command
      - run:
          name: Check if packages are ready to be released
          command:
            yarn run release:prepare-packages --compile-only --verbose

  notify_ci_failure:
    machine: true
    parameters:
      hideAuthor:
        type: string
        default: "false"
    steps:
      - checkout_command
      - bootstrap_repositories_command
      - run:
          environment:
            CKE5_SLACK_NOTIFY_HIDE_AUTHOR: << parameters.hideAuthor >>
            CKE5_PIPELINE_NUMBER: << pipeline.number >>
          name: Waiting for other jobs to finish and sending notification on failure
          command: yarn ckeditor5-dev-ci-circle-workflow-notifier
          no_output_timeout: 2h

workflows:
  version: 2
  # `cke5_tests_framework` and `cke5_tests_features` jobs are generated by the `scripts/ci/generate-config-tests.js` script.
  main:
    unless: << pipeline.parameters.isNightly >>
    jobs:
      - cke5_tests_framework
      - cke5_tests_features
#      - cke5_validators
#      - cke5_manual
#      - release_prepare
      - cke5_coverage:
          requires:
            - cke5_tests_framework
            - cke5_tests_features
#      - notify_ci_failure:
#          filters:
#            branches:
#              only:
#                - master
#                - ci/3559-circleci

  nightly:
    when: << pipeline.parameters.isNightly >>
    jobs:
      - cke5_tests_framework
      - cke5_tests_features
      - cke5_validators
      - cke5_manual
      - release_prepare
      - notify_ci_failure:
          filters:
            branches:
              only:
                - master
                - ci/3559-circleci
